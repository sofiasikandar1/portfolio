#Question1
import math
A = 10
k = 0.4
x = 0.1
w = 20
t = 0.01
p = 0.1
y = A*math.cos(k*x - w*t + p)
print('Q1:',y)

#Question2
import numpy as np  
xlist =[]
for i in np.arange(0, 6.28, 0.042147):
    xlist.append(i)
    count = i
print('Q2 :', xlist )

#Question3 
import math
import numpy as np 
A = 10
k = 0.4
x = xlist
w = 20
t = 0.01
p = 0.1
for x in xlist:
    q3 = A*math.cos(k*x- w*t + p)
    print( 'Q3 : ', q3 )
#Question4
import numpy as np 
from numpy import array
yvec = array(xlist)
q4 = A*np.cos(k*yvec- w*t + p)
print ('Q4 :', q4 )

#Question5
import os 
fname = ('.*/romeojuliet.txt')
y = open(fname)
x = y.read()
lower = x.lower()
qloc = lower.find('?')
sloc = lower.rfind(' ', 0,qloc)
wordlist = []
while qloc!=-1: 
    qloc = lower.find('?',qloc+1)
    sloc = lower.rfind(' ', 0,qloc+1)
    wordlist.append(lower[sloc:qloc])
    befq =wordlist.sort()
print('Q5 :', wordlist)

#Question6
dct={}
split = lower.split()
for i in range(len(split)-1):
    word = split[i]
    word2 = split[i+1]
    pair = (word,word2)
    if pair in dct:
        dct[pair]+=1
    else:
        dct[pair]=1
print('Q6: ', len(dct), dct['in' , 'the'] )

#Question6
dct={}
split = lower.split()
for i in range(len(split)-1):
    word = split[i]
    word2 = split[i+1]
    pair = (word,word2)
    if pair in dct:
        dct[pair]+=1
    else:
        dct[pair]=1
print('Q6: ', len(dct), dct['in' , 'the'] )

#Question7
clist = []
for i in dct:
    wp = dct[i]
    clist.append((wp,i))
clist.sort()
print('Q7: ', len(clist), clist[:5] )

#Question8
import numpy as np
fname = ('.*/numbers.txt')
y = open(fname).read()
a = np.matrix(y)
a1 = a.reshape(20,20)
x1 = a1.sum() #sum of the matrix
x2 = a1.mean() #average of the matrix
x3 = np.array(a1).std(1)
x4= x3.std()
print('Q8:', x1, ',', x2, ',', x4) 

#Question9
a2 = np.array(a1) 
flat = a2.flatten()
flat1 = np.sort(flat)
secondlargestvalue = flat1[-2]
firstlargestvalue = flat1[-1]
d = np.sqrt(flat1[-2]**2 + flat1[-1]**2)
largesttwo = a1[truevalues]
truevalues = np.where(a1 >0.998)
largestlocation = truevalues[0][0], truevalues[1][0]
secondlargestlocation = truevalues[0][1], truevalues[1][1]
print('Q9: ', firstlargestvalue, ',', largestlocation, ',',secondlargestvalue,',', secondlargestlocation, ',', d)

#Question10
def Q10(mat, n):
    mat = a1
    n = 2
    v1 = truevalues[0][0]
    h1 = truevalues[1][0]
    vn = truevalues[n-1][n-1]
    hn = truevalues[n-2][n-1]
    print( 'Q10: ', v1, h1, vn,hn)
Q10(a1, 3)




